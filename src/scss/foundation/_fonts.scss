@use '../global' as *;

@mixin font-face($font-family, $file-path, $weight: normal, $style: normal) {
  @font-face {
    font-family: $font-family;
    font-weight: $weight;
    font-style: $style;
    font-display: swap;

    src: url('#{$file-path}.woff') format('woff'),
    url('#{$file-path}.woff') format('woff2');
  }
}

/* Example include fonts from local file */
//@include font-face("Helvetica", "~/fonts/helvetica-regular", 400);
//@include font-face("Helvetica", "~/fonts/helvetica-light", 300);
//@include font-face("Helvetica", "~/fonts/helvetica-bold", 700);

/* Example include fonts from google-fonts */
//@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap');

$text-sizes: (huge: 80px,large: 64px,
        title: 36px,
        subtitle: 24px,
        header-logo: 22px,
        accent: 18px,
        default: 16px,
        text: 14px,
        small: 9px,
);

$text-sizes-small: (

        large: 64px,
        title: 18px,
        subtitle: 16px,
        accent: 14px,
        default: 14px,
        text: 12px,
        small: 9px,
);

$text-colors: ("black": #000,
        "white": #FFF,
        "gray": #00000066,
        "gray-blue": #0D1D47,
        "light-blue": #3361E9,
        "yellow": #FFC700,
        "green": #219653,
        "bronze": #BD8C4E,
        "silver": #B5B5B5,
        "gold": #ECBA40,
        "platinum": #9195A3,
        "red": red,
);

.text {
  @extend %text-default;
  color: map-get($text-colors, "black");

  &_size {

    @each $size,
    $val in $text-sizes {
      &_#{$size} {
        font-size: $val;

        @media screen and (min-width: $bp-large) {
          font-size: #{get-vw($val, $bp-large)};
        }
      }
    }

    @media screen and (max-width: $bp-mobile) {
      @each $size,
      $val in $text-sizes-small {
        &_#{$size} {
          font-size: $val;
        }
      }
    }
  }

  &_color {
    @each $color,
    $val in $text-colors {
      &_#{$color} {
        color: $val;
      }
    }
  }

  &_weight {
    &_normal {
      font-weight: 400;
    }

    &_lighter {
      font-weight: 300;
    }

    &_bold {
      font-weight: 700;
    }
  }

  &_align {
    &_center {
      text-align: center;
      vertical-align: center;
    }
    &_centered{
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      width: 100%;
    }

    &_left {
      text-align: left;
      vertical-align: center;
    }
  }
  &_absolute {
    position: absolute;
  }
  &_decoration {
    position: relative;

    &:after {
      content: "";
      position: absolute;
      bottom: -0.25em;
      left: 0;
      right: 0;
      height: 3px;
      background-color: $green;
      border-radius: 20px;
    }
  }

  &_underline {
    border-bottom: 1px solid $borderColor;
  }

  &_p {
    margin-top: 1em;
  }
}

.text-frame {
  display: inline-flex;
  flex-direction: column;
  background-color: rgba(224, 224, 224, 0.3);
  border-radius: 6px;
  padding: 1em;
  width: fit-content;
}
